# Default values for aws-service-quotas-exporter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
nameOverride: ""
fullnameOverride: ""

image:
  repository: registry.k8s.io/kube-scheduler
  pullPolicy: Always
  tag: ""

replicaCount: 1

rbac:
  create: true
  clusterRole:
    name: ""
    extraRules: []

serviceAccount:
  # Specify, whatever a service account should be created
  create: true
  # Service account name
  name: ""

deploymentStrategy: {}

# Dedicated pod related Annotations and Labels
podAnnotations: {}
podLabels: {}

podSecurityContext: {}

securityContext:
  privileged: false
  runAsNonRoot: true
  runAsUser: 1000
  runAsGroup: 1000
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL

extraArgs:
  # Example flags for customization. Uncomment and modify as needed.
  # Ensure these flags are supported and correctly handled in deployment.yaml.
  # - "--authentication-skip-lookup=true"
  # - "--profiling=false"
  # - "--bind-address=0.0.0.0"

podDisruptionBudget:
  create: true
  # minAvailable: 1
  # maxUnavailable: 1

# Request created based on common value, possible to override
resources:
  requests:
    cpu: 100m
    memory: 128Mi

livenessProbe:
  httpGet:
    path: /healthz
    port: 10259
    scheme: HTTPS # Use HTTPS if you have TLS enabled, HTTP otherwise
    # initialDelaySeconds: 10
    # timeoutSeconds: 15
    # failureThreshold: 8
    # periodSeconds: 10

readinessProbe:
  httpGet:
    path: /healthz
    port: 10259
    scheme: HTTPS # Use HTTPS if scheduler uses TLS, otherwise HTTP
  # initialDelaySeconds: 5
  # timeoutSeconds: 5
  # periodSeconds: 10
  # failureThreshold: 3

priorityClassName: ""

nodeSelector: {}
tolerations: []
affinity: {} # Affinity support tpl variables too, see for example: topologySpreadConstraints
topologySpreadConstraints: []
# Example usage, supports tpl too
# topologySpreadConstraints:
#   - maxSkew: 1
#     topologyKey: "topology.kubernetes.io/zone"
#     whenUnsatisfiable: "ScheduleAnyway"
#     labelSelector:
#       matchLabels:
#         app: "{{ .Values.appLabel }}"

logLevel: 3 # INFO, must be numeric as scheduler needs numeric value, 0-Fatal, 1-Error, 2-Warn, 3-Info, 4-Debug, 5-Trace

# ConfigMap related section used by Kube-Scheduler deployment
config:
  # Use create false if you want to use existing configMap
  create: true
  # Name of the new or existing ConfigMap
  name: ""
  # A default scheduler config provided for testing below if needed
  kubeSchedulerConfig: ""
  # kubeSchedulerConfig: |-
  #   apiVersion: kubescheduler.config.k8s.io/v1
  #   kind: KubeSchedulerConfiguration
  #   leaderElection:
  #     leaderElect: false
  #     resourceName: custom-scheduler
  #     resourceNamespace: kube-system
  #   profiles:
  #   - schedulerName: custom-scheduler
  #     pluginConfig:
  #     - name: NodeResourcesFit
  #       args:
  #         scoringStrategy:
  #           resources:
  #           - name: cpu
  #             weight: 1
  #           - name: memory
  #             weight: 1
  #           type: MostAllocated
  #     plugins:
  #       score:
  #         enabled:
  #         - name: NodeResourcesFit
  #           weight: 1
  #     leaderElect: false
  #     pluginApiVersion: kubescheduler.config.k8s.io/v1
  #     pluginConfig:
  #     - args:
  #         scoringStrategy:
  #           resources:
  #           - name: cpu
  #             weight: 1
  #           - name: memory
  #             weight: 1
  #           type: MostAllocated
  #       name: NodeResourcesFit
