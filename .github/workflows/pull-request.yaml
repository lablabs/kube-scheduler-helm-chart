name: Pull Request

on:
  workflow_dispatch:
  pull_request:
    branches:
      - main
    paths:
      - 'charts/**'

permissions:
  contents: write

jobs:
  release:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Set up Helm
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0 # pragma: allowlist sercret
        with:
          version: v3.18.2

      - name: GitHub Slug Action
        uses: rlespinasse/github-slug-action@955b5ba4560860f8a633bd24190941f16016e42c # v5.1.0

      - name: Get version
        id: get_version
        run: |
          version=$(grep 'version: ' charts/kube-scheduler/Chart.yaml | awk '{print $2}')
          branch=$GITHUB_HEAD_REF_SLUG

          pr_version="${version}-${branch}"
          echo "Defining PR version $pr_version for branch $branch"

          echo "Updating charts/kube-scheduler/Chart.yaml version to ${pr_version}"
          sed -i "s/^version:.*/version: ${pr_version}/" charts/kube-scheduler/Chart.yaml
          echo "pr_version=$pr_version" >> $GITHUB_ENV

      - name: Check and remove existing PR release
        run: |
          echo "Checking release $pr_version existence in $GITHUB_REPOSITORY"
          release_id=$( gh api -H "Accept: application/vnd.github.v3+json" /repos/$GITHUB_REPOSITORY/releases/tags/kube-scheduler-$pr_version | jq -r .id )
          if [ "$release_id" != "null" ]; then
            echo "Release kube-scheduler-$pr_version exists. Deleting..."
            gh api -X DELETE /repos/$GITHUB_REPOSITORY/releases/$release_id

            echo "Deleting tag kube-scheduler-$pr_version..."
            gh api -X DELETE /repos/$GITHUB_REPOSITORY/git/refs/tags/kube-scheduler-$pr_version
          else
            echo "Release $pr_version does not exist. Continuing..."
          fi
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@cae68fefc6b5f367a0275617c9f83181ba54714f # v1.7.0 # pragma: allowlist secret
        env:
          CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          mark_as_latest: false
          charts_dir: charts
